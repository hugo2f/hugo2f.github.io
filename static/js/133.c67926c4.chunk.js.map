{"version":3,"file":"static/js/133.c67926c4.chunk.js","mappings":"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","sources":["pages/Header.jsx","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Badge.js","pages/Projects/ProjectCard.jsx","../node_modules/react-bootstrap/esm/Row.js","pages/Projects/Projects.jsx","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return (\n    <div\n      style={{ marginTop: '20px' }}\n      className=\"header\"\n    >\n      {title}\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer\n            style={{\n              ...styles.cardStyle,\n              backgroundColor: theme.cardFooterBackground,\n            }}\n          >\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n    })),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React, { useState, useEffect, useContext } from 'react';\nimport { Container, Row, Button } from 'react-bootstrap';\nimport { ThemeContext } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal/Fade';\nimport Header from '../Header';\nimport endpoints from '../../constants/endpoints';\nimport ProjectCard from './ProjectCard';\nimport FallbackSpinner from '../FallbackSpinner';\n\nconst styles = {\n  containerStyle: {\n    marginBottom: 25,\n  },\n  showMoreStyle: {\n    margin: 25,\n  },\n};\n\nconst Projects = (props) => {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [showMore, setShowMore] = useState(false);\n\n  useEffect(() => {\n    fetch(endpoints.projects, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n\n  // Determine the number of items to display\n  const numberOfItems = showMore && data ? data.projects.length : 6;\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <div className=\"section-content-container\">\n          <Container style={styles.containerStyle}>\n            <Row xs={1} sm={1} md={2} lg={3} className=\"g-4\">\n              {data.projects.slice(0, numberOfItems).map((project) => (\n                <Fade key={project.title}>\n                  <ProjectCard project={project} />\n                </Fade>\n              ))}\n            </Row>\n\n            {/* display \"Show more\" button if there are more than 6 items */}\n            {data.projects.length > 6 && !showMore && (\n              <Button\n                style={styles.showMoreStyle}\n                variant={theme.bsSecondaryVariant}\n                onClick={() => setShowMore(true)}\n              >\n                Show more\n              </Button>\n            )}\n          </Container>\n        </div>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </>\n  );\n};\n\nProjects.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Projects;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["props","title","_jsx","style","marginTop","className","children","Col","React","ref","colProps","as","Component","bsPrefix","spans","_ref","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","concat","push","classNames","useCol","length","displayName","CardBody","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","CardImg","variant","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Badge","pill","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","_project$links","theme","useContext","ThemeContext","project","_jsxs","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","src","image","bodyText","ReactMarkdown","links","map","link","Button","onClick","window","open","href","tags","cardFooterBackground","tag","bsPrimaryVariant","Row","decoratedBsPrefix","sizePrefix","cols","containerStyle","marginBottom","showMoreStyle","header","data","setData","useState","showMore","setShowMore","useEffect","fetch","endpoints","projects","method","then","res","json","catch","err","numberOfItems","_Fragment","Container","xs","sm","md","lg","slice","Fade","ProjectCard","FallbackSpinner","size","active","disabled","buttonProps","tagName","useButtonProps"],"sourceRoot":""}